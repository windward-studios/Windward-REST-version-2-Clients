"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var winston = require('winston');
var os = require('os');
var path = require('path');
require('winston-daily-rotate-file');
var Log4j = /** @class */ (function () {
    function Log4j(options) {
        this.options = options;
        this.options.datePattern = this.options.datePattern || 'YYYY-MM-DD';
        this.options.zippedArchive = this.options.zippedArchive || true;
        this.options.maxSize = this.options.maxSize || '20m';
        this.options.maxFiles = this.options.maxFiles || '7d';
        this.options.formatter = function (meta) {
            return "TIMESTAMP:" + meta.timestamp + " LEVEL:" + meta.level + " HOSTNAME:" + meta.hostname + " PID:" + meta.pid + " " + meta.message;
        };
        this.options.console = this.options.console || false;
    }
    /**
     *
     * @returns 返回 winston logger实例
     *
     * ```
     * const logger = new Log4j({ applicationName: 'test' }).getLogger();
     * logger.info('test');
     * ```
     */
    Log4j.prototype.getLogger = function () {
        var transports = [];
        if (this.options.console) {
            transports.push(new winston.transports.Console());
        }
        var infoFilename = path.resolve(process.cwd() + "/logs", (this.options.applicationName || 'application') + "-info-%DATE%.log");
        var warnFilename = path.resolve(process.cwd() + "/logs", (this.options.applicationName || 'application') + "-warn-%DATE%.log");
        var errorFilename = path.resolve(process.cwd() + "/logs", (this.options.applicationName || 'application') + "-error-%DATE%.log");
        var tempInfoConfig = Object.assign(this.options, { level: 'info', filename: infoFilename });
        transports.push(new (winston.transports.DailyRotateFile)(tempInfoConfig));
        var tempWarnConfig = Object.assign(this.options, { level: 'warn', filename: warnFilename });
        transports.push(new (winston.transports.DailyRotateFile)(tempWarnConfig));
        var tempErrorConfig = Object.assign(this.options, { level: 'error', filename: errorFilename });
        transports.push(new (winston.transports.DailyRotateFile)(tempErrorConfig));
        return winston.createLogger({
            format: winston.format.combine(winston.format(function (info) {
                info.hostname = os.hostname();
                info.pid = process.pid;
                info.level = info.level.toUpperCase();
                return info;
            })(), winston.format.errors({ stack: true }), winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss,SSSS' }), winston.format.printf(this.options.formatter)),
            transports: transports,
        });
    };
    return Log4j;
}());
exports.default = Log4j;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nNGouanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbG9nNGoudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbkMsSUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pCLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QixPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztBQXFCckM7SUFHRSxlQUFZLE9BQW9CO1FBQzlCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBRXZCLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxJQUFJLFlBQVksQ0FBQztRQUNwRSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUM7UUFDaEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDO1FBQ3JELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUN0RCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFDLElBQVM7WUFDakMsT0FBTyxlQUFhLElBQUksQ0FBQyxTQUFTLGVBQVUsSUFBSSxDQUFDLEtBQUssa0JBQWEsSUFBSSxDQUFDLFFBQVEsYUFBUSxJQUFJLENBQUMsR0FBRyxTQUFJLElBQUksQ0FBQyxPQUFTLENBQUM7UUFDckgsQ0FBQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDO0lBQ3ZELENBQUM7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